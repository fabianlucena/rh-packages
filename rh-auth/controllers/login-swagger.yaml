components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
          required: true
          example: admin
        password:
          type: string
          format: password
          required: true
          example: 1234
        deviceId:
          type: string
          example: null
        sessionIndex:
          type: string
          example: null

    Auth:
      type: object
      properties:
        index:
          type: string
          example: null
        authToken:
          type: string
          example: 57bad00fbd50ce1af7c7d2c21a3578b2cd19e4c50cea91b8080da4e0fdc0fba6f809f8dc23e5477da9bdc8210157602630525335f139fa7624559d6f1d50ff92
        deviceToken:
          type: string
          example: 4fb8c40e4c24872a3722ff7147de06b684609c0efd1f8bf0a4103311b06a22e05eb3f0155e78e14b1963a5f3fd9a8f25ba5b513ab1fae8ffdeb35b40ade467d2
        autoLoginToken:
          type: string
          example: 1e1737b84abe106cdf8be8ced176029386e095d2918bc18b823d9604c78aca75288b0fc3590d0885d30152e4243f476c6e02ce2efab19890649edda744ad358c

    Error:
      type: object
      properties:
        error:
          type: string
          example: Example error

  responses:
    MissingParameters:
      description: Missing parameters or parameters error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

/login:
  get:
    tags:
      - Authorization
    summary: Login form
    description: Get login form definition
    produces:
      - application/json
    parameters:
      - name: $form
        in: query
        type: boolean
        value: 1
        required: true
        allowEmptyValue: false
    responses:
      '200':
        description: Success
        content:
          application/json:
            type: object
      '400':
        $ref: '#/components/responses/MissingParameters'
      '500':
        $ref: '#/components/responses/InternalServerError'

  post:
    tags:
      - Authorization
    summary: Login
    description: Get credential for use the system
    produces:
      - application/json
    consumes:
      - application/json
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
    responses:
      '201':
        description: Success
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Auth'
      '400':
        $ref: '#/components/responses/MissingParameters'
      '403':
        description: Invalid login, failed login, or other error
        $ref: '#/components/responses/Forbidden'
      '500':
        $ref: '#/components/responses/InternalServerError'

/login/check:
  get:
    tags:
      - Authorization
    summary: Check login
    description: Check login credentials for validity
    responses:
      '204':
        description: Success
      '403':
        $ref: '#/components/responses/Unauthorized'
      '500':
        $ref: '#/components/responses/InternalServerError'
