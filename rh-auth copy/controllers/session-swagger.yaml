components:
  schemas:
    SessionsList:
      type: array
      items:
        type: object
        properties:
          uuid:
            type: string
            format: uuid
            required: true
            example: aa246616-5d6f-4d00-ac0c-f1d740d57d2c
          index:
            type: string
            required: false
            example: null
          open:
            type: string
            format: date-time
            required: true
            example: 2025-05-09T08:30:00Z
          close:
            type: string
            format: date-time
            required: false
            example: 2025-05-09T08:30:00Z
          user:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                required: true
                example: f023bdae-632e-455d-8614-fcb2ee8fd7d5
              username:
                type: string
                required: true
                example: admin
              displayName:
                type: string
                required: true
                example: Admin
          device:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                required: true
                example: 5629cf1b-2029-422f-804e-1c723ce426c7
              data:
                type: string
                required: false
                example: ""

  responses:
    MissingParameters:
      description: Missing parameters or parameters error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

/session:
  get:
    tags:
      - Session
    summary: Get session or a session list
    description: If the UUID or authToken params is provided this endpoint returns a single session otherwise returns a session list
    security:
      - bearerAuth: []
    produces:
      - application/json
    parameters:
      - name: $grid
        in: query
        type: boolean
      - name: uuid
        in: query
        type: string
        format: UUID
      - name: authToken
        in: query
        type: string
      - name: limit
        in: query
        type: integer
      - name: offset
        in: query
        type: integer
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionsList'
      '204':
        description: Success no session
      '400':
        $ref: '#/components/responses/MissingParameters'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '500':
        $ref: '#/components/responses/InternalServerError'

/session/{uuid}:
  delete:
    tags:
      - Session
    summary: Delete an session
    description: Delete a session from its UUID
    security:
      - bearerAuth: []
    produces:
      - application/json
    parameters:
      - name: uuid
        in: path
        type: string
        format: uuid
        required: true
    responses:
      '204':
        description: Success
      '400':
        $ref: '#/components/responses/MissingParameters'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '500':
        $ref: '#/components/responses/InternalServerError'
